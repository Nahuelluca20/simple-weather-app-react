[{"C:\\Users\\lenovo\\OneDrive\\Documentos\\Projects\\weather-app\\src\\index.js":"1","C:\\Users\\lenovo\\OneDrive\\Documentos\\Projects\\weather-app\\src\\App.js":"2","C:\\Users\\lenovo\\OneDrive\\Documentos\\Projects\\weather-app\\src\\reportWebVitals.js":"3"},{"size":500,"mtime":499162500000,"results":"4","hashOfConfig":"5"},{"size":2734,"mtime":1609526388057,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"1i15sm4",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\lenovo\\OneDrive\\Documentos\\Projects\\weather-app\\src\\index.js",[],["17","18"],"C:\\Users\\lenovo\\OneDrive\\Documentos\\Projects\\weather-app\\src\\App.js",["19"],"import './App.css';\nimport { useState, useEffect } from 'react'\nimport axios from 'axios';\n\nfunction App() {\n  const [search, setsearch] = useState('')\n  const [allData, setAllData] = useState({\n            city: '',\n            country: '',\n            humidity: '',\n            temperature: '',\n            minTemp: '',\n            weatherIcons: ''\n  })\n\n    useEffect(() => {\n      fetchData()\n    },[])\n\n    const fetchData = async(city) => {\n        try {\n          const apiKey = process.env.REACT_APP_WEATHER_API_KEY\n          const res = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}=metric`)\n          await setAllData({\n            city: res.data.name,\n            country: res.data.sys.country,\n            humidity: res.data.main.humidity,\n            temperature: res.data.main.temp,\n            minTemp: res.data.main.temp_min,\n            weatherIcons: res.data.weather[0].icon\n          })\n        }\n        catch {}\n    }\n  \n\n  const handleSubmit = (event) => {\n    console.log(search)\n    fetchData(search)\n    event.preventDefault()\n  };\n\n  const handleChange = event => {\n    setsearch(event.target.value);\n  };\n\n  return (\n    <main>\n      <div>\n        <form onSubmit={handleSubmit}>\n          <input\n            type=\"text\" \n            name=\"city\" \n            placeholder=\"City Name\"\n            value={search}\n            onChange={handleChange}\n            />\n          <button for=\"city\">Search</button>\n        </form>\n\n        <section>\n          <div className=\"header-div\">\n            <div>\n              <div className=\"data\">\n                <img src={'https://openweathermap.org/img/wn/' + allData.weatherIcons + '@2x.png'} height=\"100px\" width=\"100px\"/>\n                <h1 className=\"title\">\n                  {allData.city}\n                </h1>\n                <h2 className=\"location\">\n                  {allData.country}\n                </h2>\n\n                <div className=\"weather-description\">\n                  <div className=\"first-child\">\n                    <h3>HUMIDITY</h3>\n                    <p>\n                    {allData.humidity}%\n                    </p>\n                  </div>\n\n                  <div>\n                    <h3>TEMPERATURE</h3>\n                    <p>\n                      {allData.temperature}°C\n                    </p>\n                  </div>\n\n                  <div className=\"last-child\">\n                    <h3>MIN TEMPERATURE</h3>\n                    <p>\n                      {allData.minTemp}°C\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default App;\n","C:\\Users\\lenovo\\OneDrive\\Documentos\\Projects\\weather-app\\src\\reportWebVitals.js",[],["20","21"],{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":65,"column":17,"nodeType":"28","endLine":65,"endColumn":130},{"ruleId":"22","replacedBy":"29"},{"ruleId":"24","replacedBy":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["31"],["32"],"no-global-assign","no-unsafe-negation"]